blockunion rayCollide
have a function that returns a list of all ships close to any ship. would help eliminate the looping through closeimportant and ships and myBub nonsense.
let client handle out of order messages.
used signedPoint everywhere where I cobbled together a solution to avoid signage problems
make slow test to make sure that every ship is either in a bubble or an orphan
some things in /shared include /def.h. This means that /client build depends on /def.h which should not be true.
make common reversed quaternion functions faster
go through and fix FIXME's
rayTraceCollide should use vectors instead of quaternions for the rotations to save computation time.
send rotations as floats to client (save 16 bytes per ship)
reduce turning at faster speeds.
actually test bubble stuff
handle going off of the edge
make ship and user lists reuse free'd spots (maybe do this after making sure everything handles ships that no longer exist. would simplify it extremely)
make sure everything can handle ships that no longer exist/are different now
have client check for END at the end of messages

Good ship AI (codify common dogfighting procedures... would be pretty sweet if I used named wwII tactics)
Collision detection/handling (big and small)
Overarching AI
Slow Vision Bullets/Vision Lasers
Missiles
